CREATE DATABASE DB_PRODUCTSALES;
GO

ALTER DATABASE DB_PRODUCTSALES SET ENABLE_BROKER;
GO

USE DB_PRODUCTSALES;
GO

CREATE TABLE PRODUCTSALES (
    SALEID INT PRIMARY KEY IDENTITY(1,1),
    PRODUCTCODE NVARCHAR(20),
    PRODUCTNAME NVARCHAR(100),
    QUANTITY INT,
    UNITPRICE DECIMAL(18,2),
    SALEDATE DATE
);
GO

INSERT INTO PRODUCTSALES (PRODUCTCODE, PRODUCTNAME, QUANTITY, UNITPRICE, SALEDATE)
VALUES
('P001', 'Pen', 10, 1.50, '2025-06-20'),
('P001', 'Pen', 5, 1.50, '2025-06-25'),
('P002', 'Notebook', 3, 3.20, '2025-06-21'),
('P003', 'Eraser', 15, 0.80, '2025-06-22');
GO

CREATE PROCEDURE spGetProductSales 
    @StartDate DATE, 
    @EndDate DATE
AS
BEGIN
    SELECT SALEID, PRODUCTCODE, PRODUCTNAME, QUANTITY, UNITPRICE, 
           (CAST(Quantity AS DECIMAL(18, 2)) * UnitPrice) AS Total, SALEDATE 
    FROM dbo.PRODUCTSALES
    WHERE SALEDATE BETWEEN @StartDate AND @EndDate
    ORDER BY SALEDATE;
END
GO

CREATE PROCEDURE spGetProductSalesDetail
    @ProductCode NVARCHAR(20),
    @StartDate DATE,
    @EndDate DATE
AS
BEGIN
    SELECT PRODUCTCODE, PRODUCTNAME, QUANTITY, UNITPRICE,
           (CAST(Quantity AS DECIMAL(18, 2)) * UnitPrice) AS Total,
           SALEDATE
    FROM dbo.PRODUCTSALES
    WHERE PRODUCTCODE = @ProductCode
      AND SALEDATE BETWEEN @StartDate AND @EndDate;
END
GO

CREATE PROCEDURE spSetNewProducts @pCode NVARCHAR(20), @pName NVARCHAR(100), @qty INT, @uPrice MONEY, @saleDate DATE

AS
BEGIN

	INSERT INTO PRODUCTSALES(PRODUCTCODE, PRODUCTNAME, QUANTITY, UNITPRICE, SALEDATE)
	VALUES(@pCode, @pName, @qty, @uPrice, @saleDate)
END
GO

CREATE PROCEDURE spGetNameProduct @pCode NVARCHAR(20)
AS
BEGIN
	SELECT PRODUCTNAME FROM PRODUCTSALES
	WHERE PRODUCTCODE = @pCode
END
GO